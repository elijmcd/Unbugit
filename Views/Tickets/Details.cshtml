@using Microsoft.AspNetCore.Http;
@using Unbugit.Services.Interfaces;
@using Unbugit.Services
@using Microsoft.AspNetCore.Identity
@using Unbugit.Models.Enums

@inject UserManager<BTUser> userManager
@inject IBTFileService BTFileService
@inject IBTHistoryService HistoryService
@inject IBTRoleService RoleService
@inject IBTProjectService ProjectService
@inject IBTTicketService TicketService

@model Unbugit.Models.Ticket

@{
    BTUser currentUser = await userManager.GetUserAsync(User);
    BTUser developerUser = await TicketService.GetTicketDeveloperAsync(Model.Id);
    BTUser ticketPM = await ProjectService.GetProjectManagerAsync(Model.Project.Id);
    ViewData["Title"] = "Ticket Details";
}

<div class="row">

    <!--History-->
    <div class="col-lg-4">
        <br />
        <h6 class="text-center">Ticket History</h6>
        <hr style="border:1px dashed; border-radius:75%; border-color:#22DC0A; max-width:100%; opacity:.8;" />
        <div class="card border shadow rounded">
            <div class="card-body" style="overflow-y: scroll; height:500px;">
                <div class="timeline">
                    <div class="accordion custom-accordion">
                        @foreach (var item in Model.TicketHistory.OrderByDescending(c => c.Created))
                        {
                            <div class="accordion-row">
                                <a href="#" class="accordion-header">
                                    <small>@item.Created.ToString("d")</small><span>@item.Description</span>
                                    <i class="accordion-status-icon close fa fa-chevron-up"></i>
                                    <i class="accordion-status-icon open fa fa-chevron-down"></i>
                                </a>
                                <div class="accordion-body">

                                    <div class="timeline-item card bg-light p-2">
                                        <div>
                                            <figure class="avatar avatar-sm mr-3 bring-forward" title="@item.User.FullName" data-toggle="tooltip">
                                                <img src="@BTFileService.ConvertByteArrayToFile(item.User.AvatarFileData, item.User.AvatarContentType)" alt="@item.User.FullName" class="rounded-circle">
                                            </figure>
                                            <span class="d-flex justify-content-between mb-2">
                                                <small>
                                                    @item.User.FullName
                                                </small>
                                                <small class="text-muted font-weight-normal">@item.Created.ToString("t")</small>
                                            </span>
                                            <div class="row no-gutters border card flex-row border-radius-1 p-2">
                                                <p>@item.Description</p>
                                                @*<div class="col-xl-2 col-lg-12">
                                                        <img src="../../assets/media/image/photo6.jpg" class="w-100"
                                                             alt="image">
                                                    </div>*@
                                                <div class="col-xl-10 col-lg-12 px-3">
                                                    @*<h5>@item.Property</h5>*@
                                                    <p>Old: @item.OldValue</p>
                                                    <p>New: @item.NewValue</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--TICKET DETAILS-->
    <div class="col-lg-4">
        <div class="row">
            <div class="card border shadow mb-1 mx-1 w-100">
                <div class="card-body rounded shadow" style="border: 1px solid #DD44A7">
                    <h6 class="text-center bg-success-bright text-success py-2">
                        <span class="text-info">Project: </span>@Model.Project.Name
                    </h6>
                    @if (
                  (User.IsInRole("Admin")) ||
                  (User.IsInRole("ProjectManager") && ticketPM == currentUser) ||
                  (User.IsInRole("Developer") && Model.DeveloperUser == currentUser) ||
                  (User.IsInRole("Submitter") && Model.OwnerUser == currentUser) ||
                  (Model.OwnerUser == currentUser)
                  )
                    {
                        <div style="border: 1px solid #DD44A7;">

                            @*<a id="newTicketLauncher" asp-action="Create" asp-controller="Tickets" class="pull-left mx-1" data-toggle="modal" data-target="#newTicketModal">
                                <span class="btn btn-outline-secondary">
                                    <i class="text-warning" data-feather="plus-square"></i>
                                </span>
                                <span>Add New Ticket</span>
                            </a>*@


                            <a id="editTicketLauncher" asp-action="Edit" asp-controller="Tickets" asp-route-id="@Model.Id" data-toggle="modal" data-target="#editTicketModal">
                                <h5 class="text-center bg-secondary-bright text-secondary py-3" style="margin-bottom:0px">
                                    @Model.Title
                                    <span class="fa fa-edit pull-right text-warning mr-2"></span>
                                </h5>
                            </a>
                        </div>
                    }
                    else
                    {
                        <h5 class="text-center text-muted py-3" style="border: 1px solid #DD44A7">@Model.Title</h5>
                    }

                    <div class="py-3">
                        <strong class="text-success" style="opacity:.8">Ticket Created:</strong> <em class="text-light">@Model.Created.ToString("d")</em>
                        <span class="pull-right"><strong class="text-danger" style="opacity:.8">Project Deadline:</strong> <em class="text-light">@Model.Project.EndDate?.ToString("d")</em></span>
                    </div>

                    <p class="text-light bg-light p-3">@Model.Description</p>

                    <p class="text-light"><span class="text-info">Type:</span> @Model.TicketType.Name</p>
                    @if (Model.TicketStatusId == 1)
                    {
                        <p class="text-danger badge-danger bg-danger-bright"><span class="text-info">Status:</span> @Model.TicketStatus.Name</p>
                    }
                    else if (Model.TicketStatusId == 2)
                    {
                        <p class="text-success"><span class="text-info">Status:</span> @Model.TicketStatus.Name</p>
                    }
                    else
                    {
                        <p class="text-light"><span class="text-info">Status:</span> @Model.TicketStatus.Name</p>
                    }
                    <p>
                        <span class="text-info">Submitter:</span>
                        @if (Model.OwnerUser is not null)
                        {
                            <figure class="avatar avatar-sm mr-3 bring-forward" title="@Model.OwnerUser.FullName" data-toggle="tooltip">
                                <img src="@BTFileService.ConvertByteArrayToFile(Model.OwnerUser.AvatarFileData, Model.OwnerUser.AvatarContentType)" title="@Model.OwnerUser.FullName" alt="@Model.OwnerUser.FullName" class="rounded-circle">
                            </figure>
                            @Model.OwnerUser.FullName
                        }
                        else
                        {
                            <a asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">
                                <span>No owner has been assigned.</span>
                            </a>
                        }
                    </p>
                    <p>
                        <span class="text-info">Developer:</span>
                        @if (Model.DeveloperUser is not null)
                        {
                            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") && (await ProjectService.GetProjectManagerAsync(Model.Project.Id)) == currentUser)
                            {
                                <a class="text-light" asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">
                                    <figure class="avatar avatar-sm mr-3 bring-forward">
                                        <img src="@BTFileService.ConvertByteArrayToFile(Model.DeveloperUser.AvatarFileData, Model.DeveloperUser.AvatarContentType)" title="@Model.DeveloperUser.FullName" alt="@Model.DeveloperUser.FullName" class="rounded-circle">
                                    </figure>
                                    <span class="badge badge-primary text-light">@Model.DeveloperUser.FullName</span>
                                </a>
                            }
                            else
                            {
                                <figure class="avatar avatar-sm mr-3 bring-forward">
                                    <img src="@BTFileService.ConvertByteArrayToFile(Model.DeveloperUser.AvatarFileData, Model.DeveloperUser.AvatarContentType)" title="@Model.DeveloperUser.FullName" alt="@Model.DeveloperUser.FullName" class="rounded-circle">
                                </figure>
                                <span class="badge badge-primary text-light">@Model.DeveloperUser.FullName</span>
                            }
                        }
                        else if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") && (await ProjectService.GetProjectManagerAsync(Model.Project.Id)) == currentUser)
                        {
                            <a asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">
                                <span class="btn btn-outline-light">No developer has been assigned.</span>
                            </a>
                        }
                        else
                        {
                            <span class="font-weight-bolder">No developer has been assigned.</span>
                        }
                    </p>
                    <p>
                        <a asp-action="Details" asp-controller="Projects" asp-route-id="@Model.ProjectId">
                            <span class="text-info">Project:</span> <span style="color:#22dc0a">@Model.Project.Name</span>
                        </a>
                    </p>
                    <h6>Ticket Priority:</h6>
                    @if (Model.TicketPriorityId == 1)
                    {
                        <div class="bg-danger-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    else if (Model.TicketPriorityId == 2)
                    {
                        <div class="bg-warning-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    else if (Model.TicketPriorityId == 3)
                    {
                        <div class="bg-info-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    else if (Model.TicketPriorityId == 4)
                    {
                        <div class="bg-primary-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    <p><a asp-action="Details" asp-controller="Projects" asp-route-id="@Model.Project.Id">Return to Project</a></p>

                </div>
            </div>
        </div>
    </div>

    <!--COMMENTS-->
    <div class="col-lg-4">
        <br />
        <h6 class="text-center">@Model.Comments.Count Comment(s)</h6>
        <hr style="border:1px dashed; border-radius:75%; border-color:#22DC0A; max-width:100%; opacity:.8;" />
        <div class="card border shadow rounded">
            <div class="card-body rounded shadow">
                <div class="col" style="max-height:300px; overflow-y:scroll; height:500px;">
                    @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
                    {
                        <div class="row">
                            <div class="col">
                                <div class="media border p-3 shadow bg-dark-gradient" style="border:2px; border-radius: 7px; margin-bottom: 1px;">
                                    <figure class="avatar avatar-sm mr-3 bring-forward" title="@comment.User.FullName" data-toggle="tooltip">
                                        <img src="@BTFileService.ConvertByteArrayToFile(comment.User.AvatarFileData, comment.User.AvatarContentType)" alt="@comment.User.FullName" class="rounded-circle">
                                    </figure>
                                    <div class="media-body bg-light" style="border:3px #ccc inset; padding:2px;">
                                        <span class="text-light">
                                            @comment.User.FullName
                                            <small><i> on @comment.Created.ToString("d")</i></small><br />
                                            <small><i>@comment.Comment</i></small><br />
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>

                <div class="row mt-3">
                    <div class="col-lg-8 offset-lg-2">
                        @if ((User.IsInRole("Admin")) ||
(User.IsInRole("ProjectManager") && ticketPM == currentUser) ||
(User.IsInRole("Developer") && developerUser == currentUser) ||
(User.IsInRole("Submitter") && Model.OwnerUser == currentUser) ||
(Model.OwnerUser == currentUser))
                        {
                            <form asp-action="Create" asp-controller="TicketComments" method="post">
                                <input type="hidden" name="TicketId" value="@Model.Id" />
                                <textarea name="Comment" rows="2" class="form-control"></textarea>
                                <button class="btn-sm btn-block btn-outline-success bg-dark-gradient" type="submit">Add Comment</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>
<!--ATTACHMENTS-->
<div class="row">
    <div class="col-lg-4">
        <div class="card shadow border my-1 mx-1 w-100">
            <div class="card-body">
                <h6 class="text-center">Ticket Attachments</h6>
                <div>
                    @if (User.IsInRole("Admin") ||
            (await ProjectService.GetProjectManagerAsync(Model.Project.Id) == currentUser) ||
            Model.DeveloperUser == currentUser ||
            Model.OwnerUser == currentUser)
                    {
                        <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="@Model.Id" name="TicketId">
                            <div class="media-body ml-3">
                                <label class="form-label d-block mb-2">Add New</label>
                                <label>
                                    Description
                                    <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                </label><br />
                                <label class="btn btn-outline-primary btn-sm">
                                    <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" />
                                </label>
                                <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3">
        <div class="row">
            @foreach (TicketAttachment item in Model.Attachments)
            {
                <div class="col-6">
                    <div class="card shadow border my-1 p-1">
                        <div class="file">
                            @if ((User.IsInRole("Admin")) || (await ProjectService.GetProjectManagerAsync(item.Ticket.Project.Id) == currentUser) || item.User == currentUser)
                            {
                                <a asp-action="Delete" asp-controller="TicketAttachments" asp-route-id="@item.Id" class="hover">
                                    <button type="button" class="btn btn-icon btn-danger">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </a>
                            }
                            <a target="_blank" asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
                                <div class="icon">
                                    <img src="@BTFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                                </div>
                                <div class="file-name">
                                    <p class="m-b-5 text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                                    <small>Size: @BTFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("MMM dd, yyyy")</span></small>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div class="modal fade" id="editTicketModal" tabindex="-1" role="dialog" aria-hidden="true" data-id="@Model.Id" data-url='@Url.Action("Edit", "Tickets")'>
</div>

<!-- EDIT TICKET Modal Launcher -->
<script type="text/javascript">
    $(document).ready(function () {
        $('#editTicketLauncher').click(function () {
            var ticketId = $(this).data('id');
            var url = $('#editTicketModal').data('url');
            $.ajax({
                url: "/Edit/Get/" + ticketId,
                cache: false
            }).done(url, function (data) {
                $("#editTicketModal").html(data);
                $("#editTicketModal").modal('show');
            });
        });
    });

</script>