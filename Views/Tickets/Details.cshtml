@using Microsoft.AspNetCore.Http;
@using Unbugit.Services.Interfaces;
@using Unbugit.Services
@using Microsoft.AspNetCore.Identity
@using Unbugit.Models.Enums

@inject UserManager<BTUser> userManager
@inject IBTFileService BTFileService
@inject IBTHistoryService HistoryService

@model Unbugit.Models.Ticket

@{
    ViewData["Title"] = "Ticket Details";
}

<h2>Ticket Details: @Model.Id</h2>

<div class="row">
    <p><a asp-action="Index" asp-controller="Projects" asp-route-id="@Model.Id">Return to Project</a></p>
</div>
<div class="row">
    <div class="col-6">
        <div class="row">
            <div class="card border shadow my-1 mx-1 w-100">
                <div class="card-body border rounded shadow">
                    <h4 style="color:#22dc0a;">
                        <a asp-action="Edit" asp-route-id="@Model.Id">
                            <span><i class="fa fa-edit"></i></span>
                        </a>
                        @Model.Title
                    </h4>
                    <h6 class="text-light">@Model.Description</h6>
                    <p class="text-light"><em class="text-success">Created on:</em> @Model.Created.ToString("d")</p>

                    <p class="text-info"><span class="text-light">Type:</span> @Model.TicketType.Name</p>
                    <p class="text-info"><span class="text-light">Status:</span> @Model.TicketStatus.Name</p>
                    <p>
                        <span class="text-light">Submitter:</span>
                        @if (Model.OwnerUser is not null)
                        {
                            <figure class="avatar avatar-sm mr-3 bring-forward">
                                <img src="@BTFileService.ConvertByteArrayToFile(Model.OwnerUser.AvatarFileData, Model.OwnerUser.AvatarContentType)" alt="@Model.OwnerUser.FullName" class="rounded-circle">
                            </figure>
                            @Model.OwnerUser.FullName
                        }
                        else
                        {
                            <a asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">
                                <span>No owner has been assigned.</span>
                            </a>
                        }
                    </p>
                    <p>
                        <span class="text-light">Developer:</span>
                        @if (Model.DeveloperUser is not null)
                        {
                            <a class="text-light" asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">
                                <figure class="avatar avatar-sm mr-3 bring-forward">
                                    <img src="@BTFileService.ConvertByteArrayToFile(Model.DeveloperUser.AvatarFileData, Model.DeveloperUser.AvatarContentType)" alt="@Model.DeveloperUser.FullName" class="rounded-circle">
                                </figure>
                                <span class="badge badge-primary text-light">@Model.DeveloperUser.FullName</span>
                            </a>
                        }
                        else
                        {
                            <a asp-action="AssignTicket" asp-controller="Tickets" asp-route-ticketId="@Model.Id">
                                <span>No developer has been assigned.</span>
                            </a>
                        }
                    </p>
                    <p>
                        <a asp-action="Details" asp-controller="Projects" asp-route-id="@Model.ProjectId">
                            Project: <span style="color:#22dc0a">@Model.Project.Name</span>
                        </a>
                    </p>
                    <p><em class="text-danger">Project Deadline:</em> @Model.Project.EndDate?.ToString("d")</p>
                    <h6>Ticket Priority:</h6>
                    @if (Model.TicketPriorityId == 1)
                    {
                        <div class="bg-danger-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    else if (Model.TicketPriorityId == 2)
                    {
                        <div class="bg-warning-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    else if (Model.TicketPriorityId == 3)
                    {
                        <div class="bg-info-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                    else if (Model.TicketPriorityId == 4)
                    {
                        <div class="bg-primary-gradient text-center text-uppercase font-weight-bolder"><span class="text-dark">@Model.TicketPriority.Name</span></div>
                    }
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="card shadow border my-1 mx-1 w-100">
                    <div class="card-body">
                        <div>
                            <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="@Model.Id" name="TicketId">
                                <div class="media-body ml-3">
                                    <label class="form-label d-block mb-2">Add Attachment</label>
                                    <label>
                                        Description
                                        <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                    </label><br />
                                    <label class="btn btn-outline-primary btn-sm">
                                        <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" />
                                    </label>
                                    <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row">
                    @foreach (TicketAttachment item in Model.Attachments)
                    {
                        <div class="col-6">
                            <div class="card shadow border my-1 p-1">
                                <div class="file">
                                    <a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
                                        <div class="hover">
                                            <button type="button" class="btn btn-icon btn-danger">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </div>
                                        <div class="icon">
                                            <img src="@BTFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                                        </div>
                                        <div class="file-name">
                                            <p class="m-b-5 text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                                            <small>Size: @BTFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("MMM dd, yyyy")</span></small>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-6">
        <div class="row">
            <div class="card border rounded shadow my-1 w-100">
                <div class="card-body rounded shadow">
                    <div class="col">
                        <div class="text-center text-light"><h6>@Model.Comments.Count Comment(s)</h6></div>
                        @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
                        {
                            <div class="row">
                                <div class="col">
                                    <div class="media border p-3 shadow bg-dark-gradient" style="border:2px; border-radius: 7px; margin-bottom: 4px;">
                                        <figure class="avatar avatar-sm mr-3 bring-forward">
                                            <img src="@BTFileService.ConvertByteArrayToFile(comment.User.AvatarFileData, comment.User.AvatarContentType)" alt="@comment.User.FullName" class="rounded-circle">
                                        </figure>
                                        <div class="media-body bg-light" style="border:3px #ccc inset; padding:5px;">
                                            <span class="text-light">
                                                @comment.User.FullName
                                                <small><i> on @comment.Created.ToString("d")</i></small><br />
                                                <small><i>@comment.Comment</i></small><br />
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <hr style="border:dotted; border-radius:75%; border-color:#22DC0A; max-width:50%; opacity:.8;" />
                        @if (!User.Identity.IsAuthenticated)
                        {
                            <a id="loginToComment" class="btn-sm btn-block registerButton" style="text-align:center;" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "Tickets")">Login to Comment</a>
                        }
                        else
                        {
                            //Once logged in, user is presented with a form to add a comment
                            <div class="row">
                                <div class="col-lg-8 offset-lg-2">
                                    <form asp-action="Create" asp-controller="TicketComments" method="post">
                                        <input type="hidden" name="TicketId" value="@Model.Id" />
                                        <textarea name="Comment" rows="4" class="form-control"></textarea>
                                        <button class="btn-sm btn-block registerButton" type="submit">Submit</button>
                                    </form>
                                </div>
                            </div>
                        }

                        <div>
                            @if (User.IsInRole("Administrator"))
                            {
                                <a asp-action="Edit" asp-route-id="@Model.Id">Edit Post </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="card border shadow rounded">
                    <div class="card-body" style="overflow-y: auto; height:220px;">
                        <div class="timeline">
                            @foreach (var item in Model.TicketHistory.OrderByDescending(c => c.Created))
                            {
                                <div class="timeline-item">
                                    <div>
                                        <a href="#">
                                            <figure class="avatar avatar-sm mr-3 bring-forward">
                                                <img src="@BTFileService.ConvertByteArrayToFile(item.User.AvatarFileData, item.User.AvatarContentType)" alt="@item.User.FullName" class="rounded-circle">
                                            </figure>
                                        </a>
                                    </div>
                                    <div>
                                        <h6 class="d-flex justify-content-between mb-4">
                                            <span>
                                                <a href="#" class="link-1">@item.User.FullName</a>
                                            </span>
                                            <span class="text-muted font-weight-normal">@item.Created.ToString("d")</span>
                                        </h6>
                                        <div class="row no-gutters border card flex-row border-radius-1 p-2">
                                                <p>@item.Description</p>
                                            @*<div class="col-xl-2 col-lg-12">
                                                    <img src="../../assets/media/image/photo6.jpg" class="w-100"
                                                         alt="image">
                                                </div>*@
                                            <div class="col-xl-10 col-lg-12 p-3">
                                                @*<h5>@item.Property</h5>*@
                                                <p>Old: @item.OldValue</p>
                                                <p>New: @item.NewValue</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
