@model Unbugit.Models.Company

@using Unbugit.Services.Interfaces

@inject IBTRoleService RoleService
@inject IBTCompanyInfoService CompanyInfoService
@inject IBTProjectService ProjectService


@{
    List<Project> companyProjects = await CompanyInfoService.GetAllProjectsAsync(Model.Id);
    ViewData["Title"] = "Company Details";
}

<h2>Current Projects for @Model.Name</h2>
<em>@Model.Description</em>

<div class="row">
    @foreach (var project in Model.Projects)
    {
        <div class="col-4">
            <div class="card shadow h-100">
                <div class="card-header">
                    <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><h5 style="color:#22dc0a">@project.Name</h5></a>
                </div>
                <div class="card-body">
                    <b>Project Manager:</b>
                    @if ((await ProjectService.GetProjectManagerAsync(project.Id)) != null)
                    {
                        <a class="badge badge-success text-dark" asp-action="AssignPM" asp-controller="Projects" asp-route-id="@project.Id">
                            @((await (ProjectService.GetProjectManagerAsync(project.Id))).FullName)
                        </a>
                    }
                    else
                    {
                        <a class="badge badge-warning text-danger" asp-action="AssignPM" asp-controller="Projects" asp-route-id="@project.Id">No Project Manager Assigned</a>
                    }
                    <br />
                    <b>Team Members:</b>
                    <ul>
                        @foreach (var member in project.Members)
                        {
                            <li>@member.FullName</li>
                        }
                    </ul>
                </div>

            </div>
        </div>
    }
</div>
@*<div>
        <h4>Company</h4>
        <hr />
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.ImageFileName)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.ImageFileName)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.ImageFileData)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.ImageFileData)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.ImageContentType)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.ImageContentType)
            </dd>
        </dl>
    </div>*@
<div>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit Company Details</a><br />
        <a asp-action="Create" asp-controller="Projects">Create New Project</a><br />
    }
    <a asp-action="Index">Back to List</a>
</div>
